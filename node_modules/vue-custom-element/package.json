{
  "_args": [
    [
      {
        "raw": "vue-custom-element",
        "scope": null,
        "escapedName": "vue-custom-element",
        "name": "vue-custom-element",
        "rawSpec": "",
        "spec": "latest",
        "type": "tag"
      },
      "C:\\Users\\kpace\\Documents\\sandbox\\vue\\vue-component"
    ]
  ],
  "_from": "vue-custom-element@latest",
  "_id": "vue-custom-element@1.3.0",
  "_inCache": true,
  "_location": "/vue-custom-element",
  "_nodeVersion": "8.1.2",
  "_npmOperationalInternal": {
    "host": "s3://npm-registry-packages",
    "tmp": "tmp/vue-custom-element-1.3.0.tgz_1500850595042_0.9647350928280503"
  },
  "_npmUser": {
    "name": "karolf",
    "email": "karol@fabjanczuk.pl"
  },
  "_npmVersion": "5.2.0",
  "_phantomChildren": {},
  "_requested": {
    "raw": "vue-custom-element",
    "scope": null,
    "escapedName": "vue-custom-element",
    "name": "vue-custom-element",
    "rawSpec": "",
    "spec": "latest",
    "type": "tag"
  },
  "_requiredBy": [
    "#USER",
    "/"
  ],
  "_resolved": "http://registry.npmjs.org/vue-custom-element/-/vue-custom-element-1.3.0.tgz",
  "_shasum": "0c244f2f4edf81aba3de9f763f8496462fd3f709",
  "_shrinkwrap": null,
  "_spec": "vue-custom-element",
  "_where": "C:\\Users\\kpace\\Documents\\sandbox\\vue\\vue-component",
  "author": {
    "name": "Karol FabjaÅ„czuk"
  },
  "bugs": {
    "url": "https://github.com/karol-f/vue-custom-element/issues"
  },
  "dependencies": {
    "document-register-element": "^1.5.0",
    "element-ui": "^1.3.6",
    "es6-promise": "^4.1.0",
    "prismjs": "^1.6.0",
    "set-prototype-of": "^1.0.0",
    "vue": "^2.3.4",
    "vue-router": "^2.5.3"
  },
  "description": "Custom Elements for Vue.js",
  "devDependencies": {
    "autoprefixer": "^7.1.1",
    "babel-core": "^6.25.0",
    "babel-eslint": "^7.2.3",
    "babel-loader": "^7.0.0",
    "babel-plugin-external-helpers": "^6.22.0",
    "babel-plugin-transform-custom-element-classes": "^0.1.0",
    "babel-plugin-transform-runtime": "^6.23.0",
    "babel-preset-es2015": "^6.24.1",
    "babel-preset-stage-2": "^6.24.1",
    "babel-register": "^6.24.1",
    "chalk": "^1.1.3",
    "chromedriver": "^2.30.1",
    "connect-history-api-fallback": "^1.3.0",
    "cross-spawn": "^5.1.0",
    "css-loader": "^0.28.4",
    "eslint": "^3.17.1",
    "eslint-config-airbnb-base": "^11.1.1",
    "eslint-friendly-formatter": "^3.0.0",
    "eslint-import-resolver-webpack": "^0.8.1",
    "eslint-loader": "^1.7.1",
    "eslint-plugin-html": "^3.0.0",
    "eslint-plugin-import": "^2.3.0",
    "eventsource-polyfill": "^0.9.6",
    "express": "^4.15.3",
    "extract-text-webpack-plugin": "^2.1.2",
    "file-loader": "^0.11.2",
    "friendly-errors-webpack-plugin": "^1.6.1",
    "function-bind": "^1.1.0",
    "html-webpack-plugin": "^2.28.0",
    "http-proxy-middleware": "^0.17.4",
    "nightwatch": "^0.9.16",
    "opn": "^5.1.0",
    "ora": "^1.2.0",
    "rollup": "^0.43.0",
    "rollup-plugin-babel": "^2.7.1",
    "rollup-plugin-commonjs": "^8.0.2",
    "rollup-plugin-node-resolve": "^3.0.0",
    "rollup-plugin-replace": "^1.1.1",
    "rollup-watch": "^4.0.0",
    "selenium-server": "^3.4.0",
    "semver": "^5.3.0",
    "shelljs": "^0.7.8",
    "uglify-js": "^2.8.28",
    "url-loader": "^0.5.9",
    "vue-loader": "^12.2.1",
    "vue-style-loader": "^3.0.1",
    "vue-template-compiler": "^2.3.4",
    "webpack": "^2.6.1",
    "webpack-bundle-analyzer": "^2.8.2",
    "webpack-dev-middleware": "^1.10.2",
    "webpack-hot-middleware": "^2.18.0",
    "webpack-merge": "^4.1.0"
  },
  "directories": {},
  "dist": {
    "integrity": "sha512-Lap+e+nV06EeGiVP5B94nKVcPHWnLxRFIjM1yRjxgZzve2UB/urL0s/KTmnGnn7rt/eNhxy7xTbwkVa2DV2UuA==",
    "shasum": "0c244f2f4edf81aba3de9f763f8496462fd3f709",
    "tarball": "https://registry.npmjs.org/vue-custom-element/-/vue-custom-element-1.3.0.tgz"
  },
  "engines": {
    "node": ">= 4.0.0",
    "npm": ">= 3.0.0"
  },
  "gitHead": "dd1795c16edb0aa03efb84f2758f7b72b5d5d7cc",
  "homepage": "https://github.com/karol-f/vue-custom-element",
  "keywords": [
    "vue",
    "custom-elements"
  ],
  "license": "MIT",
  "main": "dist/vue-custom-element.js",
  "maintainers": [
    {
      "name": "karolf",
      "email": "karol@fabjanczuk.pl"
    }
  ],
  "module": "dist/vue-custom-element.esm.js",
  "name": "vue-custom-element",
  "optionalDependencies": {},
  "readme": "![Vue-custom-element](demo/assets/images/vue-custom-element-logo-text.png)\n\n## Table of content\n\n- [Demo](#demo)\n- [Installation](#installation)\n- [Description](#description)\n- [Example](#example)\n- [Browsers support](#browsers-support)\n- [Options](#options)\n- [How does it work?](#how-does-it-work)\n- [Testing](#testing)\n- [Caveats](#caveats)\n\n## Demo\nYou can check Vue-custom-element demos at **https://karol-f.github.io/vue-custom-element/**\n\n## Installation\n\n#### NPM\n```bash\nnpm install vue-custom-element --save\n```\n\n```javascript\nimport vueCustomElement from 'vue-custom-element'\n\nVue.use(vueCustomElement);\n```\n\n#### Direct include\n\nIf you are using Vue globally, just include `vue-custom-element.js` and it will automatically install the `Vue.customElement` method.\n\n```html\n<script src=\"path/to/vue-custom-element.js\"></script>\n```\n\n#### Optional polyfill\nFor cross-browser compatibility (IE9+) use Custom Elements polyfill.\n\n```html\n<script src=\"https://cdnjs.cloudflare.com/ajax/libs/document-register-element/1.4.1/document-register-element.js\"></script>\n```\n\nor \n\n```\nimport 'document-register-element/build/document-register-element';\n```\n\n## Description\n\n`Vue-custom-element` is a tiny wrapper around Vue components. It provide seamless way to use it in HTML, plain JavaScript, Vue, React, Angular etc., using power of Custom Elements.\n* Works with Vue 0.12.x, 1.x and 2.x\n* Small - 2.5 kb min+gzip, optional polyfill - 5 kb min+gzip\n\n### Why you might need `Vue-custom-element`?\n![Vue-custom-element](demo/assets/images/vue-custom-element-why.png)\n\nIt might be confusing for users to understand difference between Vue components, Custom Elements and it's use cases.\n \nWhy you might need `Vue-custom-element`? Simply, for your Vue components user's convinience. All they would need to do is include your JavaScript file and then they can:\n\n* include HTML tag (e.g. `<my-component><my-component />`) in any time of document lifecycle. You can use your elements in e.g. SPA application just by including HTML tag - no Vue initialization or JavaScript usage is needed. Custom Elements will auto initialize when mounted into document. You can include them in e.g. Vue, Angular or React projects and browser will take care of detecting it and initialization\n* use simple API that allows for interacting with underlaying Vue instance by changing attributes, props or listening to events\n* take advantage of features like lazy-loading, that allows for loading components on demand, only when user add them to document\n\n### Features\n\n* **Simplicity** - only `tag-name` and Vue component `object` is needed for `Vue.customElement()` usage\n* **Compatibility** - using optional polyfill we can support wide range of browsers, including IE9+, Android and IOS\n* **Full featured** - you can use nesting, HMR, slots, lazy-loading, native Custom Elements callbacks.\n\t* reactive props and HTML attributes\n\t* automatic props casting (numbers, booleans) so they won't be available as strings but proper data types\n\t* listening to Vue component $emit'ed events\n\t* 'default' and 'named' slots are available for passing static content, check demo for example\n\t* Hot Module Replacement for seamless developer experience (unminimized build, Vue 2.x+)\n\t* lazy-loading - you can download component after it's attached to document. Useful for e.g. UI library authors. Check demo for example\n\t* detecting if detached callback is not invoked due to opening vue-custom-element in modal - element is then detached and attached to DOM again. It would be undesirable to destroy it immediately\n* **Custom Elements v1** - compatible with latest specification. Vue-custom-element will use native implementation if supported\n\nCheck demos site to see it in action. \n\n## Example\nFor additional examples and detailed description check the demos page.\n\n###### Custom Element HTML\n``` html\n<widget-vue prop1=\"1\" prop2=\"string\" prop3=\"true\"></widget-vue>\n```\n\n###### JavaScript - register with Vue-custom-element\n``` js\nVue.customElement('widget-vue', {\n  props: [\n    'prop1',\n    'prop2',\n    'prop3'\n  ],\n  data: {\n    message: 'Hello Vue!'\n  },\n  template: '<p>{{ message }}, {{ prop1  }}, {{prop2}}, {{prop3}}</p>'\n});\n```\n\n###### JavaScript - element API usage\n``` js\ndocument.querySelector('widget-vue')[0].prop2 // get prop value\ndocument.querySelector('widget-vue')[0].prop2 = 'another string' // set prop value\n```\n\nYou can also change `<widget-vue>` HTML attributes and changes will be instantly reflected.\n\n\n## Browsers support\n\n| [<img src=\"https://raw.githubusercontent.com/godban/browsers-support-badges/master/src/images/firefox.png\" alt=\"Firefox\" width=\"16px\" height=\"16px\" />](http://godban.github.io/browsers-support-badges/)</br>Firefox | [<img src=\"https://raw.githubusercontent.com/godban/browsers-support-badges/master/src/images/chrome.png\" alt=\"Chrome\" width=\"16px\" height=\"16px\" />](http://godban.github.io/browsers-support-badges/)</br>Chrome | [<img src=\"https://raw.githubusercontent.com/godban/browsers-support-badges/master/src/images/safari.png\" alt=\"Safari\" width=\"16px\" height=\"16px\" />](http://godban.github.io/browsers-support-badges/)</br>Safari | [<img src=\"https://raw.githubusercontent.com/godban/browsers-support-badges/master/src/images/opera.png\" alt=\"Opera\" width=\"16px\" height=\"16px\" />](http://godban.github.io/browsers-support-badges/)</br>Opera | [<img src=\"https://raw.githubusercontent.com/godban/browsers-support-badges/master/src/images/chrome-android.png\" alt=\"Chrome for Android\" width=\"16px\" height=\"16px\" />](http://godban.github.io/browsers-support-badges/)</br>Android |\n|:---------:|:---------:|:---------:|:---------:|:---------:|\n| behind --flag| 54+ | 10.1+ | 42+| 55+\n\n[Custom Elements v1 support](http://caniuse.com/#feat=custom-elementsv1)\n\n#### With optional polyfill\n\n| [<img src=\"https://raw.githubusercontent.com/godban/browsers-support-badges/master/src/images/edge.png\" alt=\"IE / Edge\" width=\"16px\" height=\"16px\" />](http://godban.github.io/browsers-support-badges/)</br>IE / Edge | [<img src=\"https://raw.githubusercontent.com/godban/browsers-support-badges/master/src/images/firefox.png\" alt=\"Firefox\" width=\"16px\" height=\"16px\" />](http://godban.github.io/browsers-support-badges/)</br>Firefox | [<img src=\"https://raw.githubusercontent.com/godban/browsers-support-badges/master/src/images/chrome.png\" alt=\"Chrome\" width=\"16px\" height=\"16px\" />](http://godban.github.io/browsers-support-badges/)</br>Chrome | [<img src=\"https://raw.githubusercontent.com/godban/browsers-support-badges/master/src/images/safari.png\" alt=\"Safari\" width=\"16px\" height=\"16px\" />](http://godban.github.io/browsers-support-badges/)</br>Safari | [<img src=\"https://raw.githubusercontent.com/godban/browsers-support-badges/master/src/images/opera.png\" alt=\"Opera\" width=\"16px\" height=\"16px\" />](http://godban.github.io/browsers-support-badges/)</br>Opera | [<img src=\"https://raw.githubusercontent.com/godban/browsers-support-badges/master/src/images/safari-ios.png\" alt=\"iOS Safari\" width=\"16px\" height=\"16px\" />](http://godban.github.io/browsers-support-badges/)</br>iOS | [<img src=\"https://raw.githubusercontent.com/godban/browsers-support-badges/master/src/images/chrome-android.png\" alt=\"Chrome for Android\" width=\"16px\" height=\"16px\" />](http://godban.github.io/browsers-support-badges/)</br>Android |\n|:---------:|:---------:|:---------:|:---------:|:---------:|:---------:|:---------:|\n| IE9+, Edge| &check;| &check; | &check; | &check; | &check; | &check;\n\n## Options\nAdditional, optional, third parameter to `Vue.customElement()` is options object. You can pass following methods.\n\n'This' in callbacks points to Custom Element's DOM Node.\n\n```javascript\n{\n  // 'constructorCallback' can be triggered multiple times when e.g. vue-router is used\n  constructorCallback() {\n      console.info('constructorCallback', this);\n  },\n\n  // element is mounted/inserted into document\n  connectedCallback() {\n    console.info('connectedCallback', this);\n  },\n\n  // element is removed from document\n  disconnectedCallback() {\n    console.warn('disconnectedCallback', this);\n  },\n\n  // one of element's attributes (Vue instance props) is changed \n  attributeChangedCallback(name, oldValue, value) {\n    console.info('attributeChangedCallback', name, oldValue, value);\n  },\n  \n  // in case of using vue-custom-element with modals, we destroy  it after defined timeout\n  destroyTimeout: 3000,\n  \n  // only needed when using lazy-loading - 'props' are not accessible on Custom Element registration so we have to provide them\n  props: [],\n\n  // you can set shadow root for element. Only works if native implementation is available.\n  shadow: false,\n  \n  // you can set CSS that will be available in Shadow DOM.\n  shadowCss: ''\n}\n```\n\nExample options usage:\n\n```javascript\nimport MyElement from './MyElement.vue';\n\nVue.customElement('my-element', MyElement, {\n  shadow: true,\n  shadowCss: `\n  .card {\n     background-color: blue;\n  }`\n});\n```\n\nCallbacks are executed before lifecycle hooks from Vue component passed to Vue-custom-element. It's better idea just to use Vue component lifecycle hooks (e.g. `created`, `mounted`, `beforeDestroy`).\n\n## How does it work?\n![Vue-custom-element](demo/assets/images/vue-custom-element-schema.png)\n\nInside HTML tag of defined custom element, Vue-custom-element will create:\n\n* Proxy component for seamless Hot Module Replacement, using render function for performance (Vue 2.x+) \n* Vue component passed to Vue-custom-element\n\nCustom Element HTML tag will expose API to interact with underlying Vue component - you can change HTML attributes or props, using JavaScript. \n\n## Testing\n\nFor advanced access, when exposed API is not enough, defined custom element will expose Vue instance via `__vue_custom_element__` prop.\n\n```javascript\nconsole.info(document.querySelector('widget-vue').__vue_custom_element__)\n```\n## Caveats\n\n* custom elements **must** contain a hyphen in its tag name. For example, `my-element` is valid, but `myelement` is not\n* in dev mode Vue will display console warning about element not being registered. It's desirable behaviour as we want to use browser's Custom Elements registration. You can use https://vuejs.org/v2/api/#ignoredElements to get rid of this warnings.\n\n## Contribute\n\n#### Developement\n```\nnpm install\nnpm run dev:demo\n```\n\n#### Release\n```\nnpm run build\n```\nThis command will compile `vue-custom-element.js` and docs files.\n\nPlease take a note that `npm run build` will use `config.build.assetsPublicPath`, which is set to Github Pages path in `config/index.js`.\n\n## License\n\n[MIT](http://opensource.org/licenses/MIT)\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/karol-f/vue-custom-element.git"
  },
  "scripts": {
    "build": "npm run build:library && npm run build:demo",
    "build:demo": "node build/build-demo.js",
    "build:library": "node build/build.rollup.js",
    "dev": "rollup -wm -c build/dev.config.rollup.js",
    "dev:demo": "node build/dev-server.js",
    "e2e": "node test/e2e/runner.js",
    "lint": "eslint --ext .js,.vue src test/e2e/specs",
    "release": "bash build/release.sh",
    "test": "npm run e2e"
  },
  "types": "index.d.ts",
  "version": "1.3.0"
}
